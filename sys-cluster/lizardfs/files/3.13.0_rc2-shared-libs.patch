This patch fixes several things:
 - the package installs per default binaries with dangling libraries deps
   (installs the binaries without the required libraries)
 - libchunkserver should be static
 - libmfscommon must be shared to link against libfmt
 - rename libmount to avoid install-time conflict with util-linux' libmount
diff --git a/cmake/SharedLibraries.cmake b/cmake/SharedLibraries.cmake
index 631c1a3..1bb4fcd 100644
--- a/cmake/SharedLibraries.cmake
+++ b/cmake/SharedLibraries.cmake
@@ -16,16 +16,8 @@
 
 function(shared_add_library NAME ...)
 	list(REMOVE_AT ARGV 0)
-
-	add_library(${NAME} ${ARGV})
-	if(ENABLE_PIC_TARGETS)
-		add_library(${NAME}_pic ${ARGV})
-		if("${CMAKE_VERSION}" VERSION_GREATER 2.8.9)
-			set_property(TARGET ${NAME}_pic PROPERTY POSITION_INDEPENDENT_CODE ON)
-		else()
-			set_property(TARGET ${NAME}_pic PROPERTY COMPILE_FLAGS "-fPIC")
-		endif()
-	endif()
+	add_library(${NAME} SHARED ${ARGV})
+	install(TARGETS ${NAME} DESTINATION RUNTIME DESTINATION ${LIB_SUBDIR})
 endfunction()
 
 function(shared_target_link_libraries TARGET)
diff --git a/src/chunkserver/CMakeLists.txt b/src/chunkserver/CMakeLists.txt
index 9c38a79..76380d1 100755
--- a/src/chunkserver/CMakeLists.txt
+++ b/src/chunkserver/CMakeLists.txt
@@ -3,7 +3,7 @@ add_definitions(-DLIZARDFS_MAX_FILES=10000)
 add_definitions(-DAPPNAME=mfschunkserver)
 
 collect_sources(CHUNKSERVER)
-add_library(chunkserver ${CHUNKSERVER_SOURCES})
+add_library(chunkserver STATIC ${CHUNKSERVER_SOURCES})
 target_link_libraries(chunkserver lzfsprotocol mfscommon ${ADDITIONAL_LIBS})
 create_unittest(chunkserver ${CHUNKSERVER_TESTS})
 link_unittest(chunkserver chunkserver mfscommon)
diff --git a/src/mount/CMakeLists.txt b/src/mount/CMakeLists.txt
index 99c758d..b466a07 100755
--- a/src/mount/CMakeLists.txt
+++ b/src/mount/CMakeLists.txt
@@ -19,6 +19,7 @@ include_directories(${CMAKE_CURRENT_SOURCE_DIR})
 collect_sources(MOUNT)
 
 shared_add_library(mount ${MOUNT_SOURCES})
+set_target_properties(mount PROPERTIES OUTPUT_NAME "mfsmount")
 shared_target_link_libraries(mount mfscommon ${ADDITIONAL_LIBS})
 
 create_unittest(mount ${MOUNT_TESTS})
